plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android' version '1.8.0' // Add Kotlin support
    id 'io.gitlab.arturbosch.detekt' version '1.23.4'
    id 'com.github.spotbugs' version '5.2.1'
    id 'checkstyle'
}

android {
    namespace 'com.grobacz.shoppinglistapp'
    compileSdk 34

    defaultConfig {
        applicationId "com.grobacz.shoppinglistapp"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"
        
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        // Enable core library desugaring for Java 8+ APIs
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    // Enable view binding
    buildFeatures {
        viewBinding true
    }
    
    // Enable data binding
    buildFeatures {
        dataBinding true
    }
}

dependencies {
    // AndroidX Core
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    
    // Material Design 3
    implementation 'com.google.android.material:material:1.11.0'
    
    // RecyclerView and CardView
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'androidx.cardview:cardview:1.0.0'
    
    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    
    // Room components
    implementation 'androidx.room:room-runtime:2.6.1'
    implementation 'androidx.room:room-ktx:2.6.1'
    annotationProcessor 'androidx.room:room-compiler:2.6.1'
    
    // Gson for JSON serialization/deserialization
    implementation 'com.google.code.gson:gson:2.10.1'
    
    // Kotlin coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'
    
    // For Java 8+ API desugaring support
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
    
    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.5.1'
    
    // Static analysis
    detektPlugins 'io.gitlab.arturbosch.detekt:detekt-formatting:1.23.4'
}

// Android Lint configuration
android {
    lint {
        abortOnError false
        checkReleaseBuilds false
        disable 'GoogleAppIndexingWarning'
        xmlReport true
        htmlReport true
        xmlOutput file("$project.buildDir/reports/lint/lint-result.xml")
        htmlOutput file("$project.buildDir/reports/lint/lint-result.html")
    }
}

// Detekt configuration
detekt {
    toolVersion = "1.23.4"
    config.setFrom(file("$rootDir/config/detekt/detekt.yml"))
    buildUponDefaultConfig = true
    allRules = false
    source = files("src/main/java", "src/main/kotlin")
    
    reports {
        html.required = true
        xml.required = true
        txt.required = true
        sarif.required = true
        md.required = true
    }
}

// SpotBugs configuration
spotbugs {
    ignoreFailures = false
    showStackTraces = true
    showProgress = true
    effort = 'max'
    reportLevel = 'low'
}

tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
    reports {
        html {
            required = true
            outputLocation = file("$buildDir/reports/spotbugs/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

// Checkstyle configuration
checkstyle {
    toolVersion = '10.12.4'
    configFile file("$rootDir/config/checkstyle/checkstyle.xml")
}

task checkstyle(type: Checkstyle) {
    configFile file("$rootDir/config/checkstyle/checkstyle.xml")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    
    classpath = files()
    
    reports {
        xml.required = false
        html.required = true
        html.destination file("$buildDir/reports/checkstyle/checkstyle.html")
    }
}

// Include static analysis tasks
apply from: '../static-analysis.gradle'
